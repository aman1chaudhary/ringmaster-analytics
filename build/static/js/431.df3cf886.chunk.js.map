{"version":3,"file":"static/js/431.df3cf886.chunk.js","mappings":"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","sources":["components/ThreeDModel.js","pages/ResultPage.js","pages/EditPage.js","components/LiveRecording.js","data/cloudinaryVideos.js","components/StockVideos.js","components/VideoUploadToCloud.js","pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst ThreeDModel = ({animationPlay,threeDModelLink}) => {\n    const [show3d, setShow3d] = useState(false);\n\n\n    useEffect(() => {\n        setShow3d(true);\n    }, []);\n\n\n    \n    // https://res.cloudinary.com/doi281cds/image/upload/v1699423569/boxing_default_wpe9li.glb\n    // https://res.cloudinary.com/doi281cds/image/upload/v1699520842/kid_boxing_default_hqf4ag.glb\n\n    // https://res.cloudinary.com/doi281cds/image/upload/v1700644445/kid_boxing_default_mvty2z.glb\n\n\n\n    return (\n        <>\n            {show3d && threeDModelLink && (\n                <div style={{ width: \"100%\", height: \"100%\" }}>\n                    <ar-3d-viewer\n                        cloud=\"doi281cds\"\n                        models={threeDModelLink}\n                        animation-play={animationPlay.toString()} // Convert to string\n                        shadow=\"true\"\n                        ar=\"false\"\n                    >\n                    </ar-3d-viewer>\n                </div>\n            )}\n\n            \n        </>\n    );\n}\n\nexport default ThreeDModel;\n","import React, { useState } from 'react'\nimport { BsFillRecordCircleFill } from 'react-icons/bs';\nimport { useAlertContext } from '../contexts/AlertContext';\nimport { useUserContext } from '../contexts/UserContext';\nimport axios from 'axios';\nimport { useLoaderContext } from '../contexts/LoaderContext';\nimport { AiFillPauseCircle, AiFillPlayCircle, AiOutlineDelete } from 'react-icons/ai';\nimport RecordRTC from 'recordrtc';\nimport ThreeDModel from '../components/ThreeDModel';\n\nconst ResultPage = ({ editVideoSrc, analysisVideo, segmentVideoRef, setSegmentVideos, setAnalysisVideo, threeDModelLink }) => {\n    const [annotationText, setAnnotationText] = useState(\"\")\n    const { loginUser } = useUserContext();\n    const { setAlertMessage, setShowAlert } = useAlertContext();\n    const { setIsLoading } = useLoaderContext();\n\n    const [recording, setRecording] = useState(false);\n    const [mediaStream, setMediaStream] = useState(null);\n    const [recordedBlob, setRecordedBlob] = useState(null);\n    const recorderRef = React.useRef();\n\n    const [animationPlay, setAnimationPlay] = useState(true);\n\n\n    const toggleAnimation = () => {\n        if (segmentVideoRef.current) {\n            if (animationPlay) {\n                segmentVideoRef.current.pause();\n            } else {\n                segmentVideoRef.current.play();\n            }\n            setAnimationPlay((prevAnimationPlay) => !prevAnimationPlay);\n        }\n\n\n    };\n\n\n    const fetchSegmentVideos = async (email) => {\n        try {\n            const response = await axios.get(`/api/load_video_segments?email=${email}`);\n\n\n            const filteredSegments = response.data.videoSegments.filter((segment) => {\n                return segment.mainVideoURL === editVideoSrc;\n            });\n            setSegmentVideos(filteredSegments);\n\n            const analysisSegment = filteredSegments.find((segment) => {\n                return segment.segmentURL === analysisVideo.segmentURL;\n            });\n\n            setAnalysisVideo(analysisSegment)\n\n        } catch (error) {\n            setAlertMessage('Error loading video:', error);\n            setShowAlert(true)\n        }\n    };\n\n\n    const handleAddTextAnnotation = () => {\n        if (annotationText) {\n            setIsLoading(true)\n            axios\n                .post('/api/text_annotation', {\n                    email: loginUser.email,\n                    segmentURL: analysisVideo.segmentURL,\n                    annotationText: annotationText\n\n                })\n                .then((res) => {\n                    setAlertMessage(res.data.message);\n                    fetchSegmentVideos(loginUser.email)\n                    setAnnotationText(\"\")\n                    setShowAlert(true)\n                })\n                .catch((err) => {\n                    setAlertMessage(\"An error occurred\" + err)\n                    setShowAlert(true)\n\n                });\n            setIsLoading(false)\n\n        } else {\n            setAlertMessage(\"No Annotation Text is provided.\");\n            setShowAlert(true)\n        }\n\n    }\n\n    const handleAnnotationTextChange = (e) => {\n        setAnnotationText(e.target.value);\n    };\n\n\n    const handleDeleteTextAnnotation = (text) => {\n        const confirmed = window.confirm(\"Are you sure you want to delete this Annotation text?\");\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            setIsLoading(true);\n\n            axios.delete('/api/delete_text_annotation', {\n                data: {\n                    email: loginUser.email,\n                    segmentURL: analysisVideo.segmentURL,\n                    annotationText: text\n                },\n                headers: {\n                    'Content-Type': 'application/json' // Set the Content-Type to JSON\n                }\n            })\n                .then((response) => {\n                    setAlertMessage(response.data.message);\n                    fetchSegmentVideos(loginUser.email)\n                    setShowAlert(true);\n                })\n                .catch((error) => {\n                    setAlertMessage('Error deleting annotation text:', error);\n                    setShowAlert(true);\n                })\n                .finally(() => {\n                    setIsLoading(false);\n                });\n        } catch (error) {\n            setAlertMessage('Error deleting annotation text:', error);\n            setShowAlert(true);\n            setIsLoading(false);\n        }\n    };\n\n\n    const handleDeleteAudioAnnotation = (audioURL) => {\n        const confirmed = window.confirm(\"Are you sure you want to delete this Annotation audio?\");\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            setIsLoading(true);\n\n            axios.delete('/api/delete_audio_annotation', {\n                data: {\n                    email: loginUser.email,\n                    segmentURL: analysisVideo.segmentURL,\n                    annotationAudio: audioURL\n                },\n                headers: {\n                    'Content-Type': 'application/json' // Set the Content-Type to JSON\n                }\n            })\n                .then((response) => {\n                    setAlertMessage(response.data.message);\n                    fetchSegmentVideos(loginUser.email)\n                    setShowAlert(true);\n                })\n                .catch((error) => {\n                    setAlertMessage('Error deleting annotation text:', error);\n                    setShowAlert(true);\n                })\n                .finally(() => {\n                    setIsLoading(false);\n                });\n        } catch (error) {\n            setAlertMessage('Error deleting annotation text:', error);\n            setShowAlert(true);\n            setIsLoading(false);\n        }\n    };\n\n    const saveAudioAnnotation = () => {\n        if (recordedBlob) {\n            setIsLoading(true)\n            const formData = new FormData();\n            formData.append('email', loginUser.email);\n            formData.append('segmentURL', analysisVideo.segmentURL);\n            formData.append('audio_blob', new Blob([recordedBlob], { type: 'audio/wav' }));\n\n            axios.post('/api/save_audio_annotation', formData)\n                .then((response) => {\n                    setAlertMessage(response.data.message);\n                    fetchSegmentVideos(loginUser.email)\n                    setRecordedBlob(null)\n                    setShowAlert(true);\n\n                })\n                .catch((error) => {\n                    setAlertMessage('Error saving audio annotation:', error);\n                    setShowAlert(true);\n                })\n                .finally(() => {\n                    setIsLoading(false);\n                });\n\n        } else {\n            setAlertMessage('No recorded audio available to save.');\n            setShowAlert(true);\n        }\n    };\n\n\n\n    const startRecording = () => {\n        navigator.mediaDevices\n            .getUserMedia({ audio: true })\n            .then((stream) => {\n                const recorder = new RecordRTC(stream, { type: 'audio' });\n                recorderRef.current = recorder;\n                recorder.startRecording();\n                setMediaStream(stream);\n                setRecording(true);\n            })\n            .catch((error) => {\n                setAlertMessage('Error accessing microphone:', error);\n                setShowAlert(true);\n            });\n    };\n\n    const stopRecording = () => {\n        if (recorderRef.current) {\n            recorderRef.current.stopRecording(() => {\n                setRecordedBlob(recorderRef.current.getBlob());\n                mediaStream.getTracks().forEach((track) => track.stop());\n                setRecording(false);\n            });\n        }\n    };\n\n\n\n    return (\n        <>\n            <div className='tab_section'>\n                <h1>Analysis Output</h1>\n            </div>\n\n            {analysisVideo && analysisVideo.segmentURL && threeDModelLink? (\n                <>\n                    <div className='tab_section' >\n\n\n                        <div className='row'>\n                            <div className='col-md-6'>\n                                <div className='video_player'>\n                                    <video\n                                        // controls\n                                        ref={segmentVideoRef}\n                                        autoPlay\n                                        loop\n                                        muted\n                                        src={analysisVideo.segmentURL}\n                                    >\n                                    </video>\n                                </div>\n\n                            </div>\n                            <div className='col-md-6'>\n                                <ThreeDModel animationPlay={animationPlay} threeDModelLink={threeDModelLink}/>\n                            </div>\n                        </div>\n\n                        {/* <button className=\"play_pause_btn\" onClick={toggleAnimation}>\n                            {animationPlay ? <AiFillPauseCircle/> : <AiFillPlayCircle/>}\n                        </button> */}\n\n                    </div>\n                    <div className='row'>\n                        <div className='col-md-6'>\n                            <div className='tab_section' >\n\n\n                                <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n                                    <li className=\"nav-item\" role=\"presentation\">\n                                        <button className=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#home\" type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Add text annotation</button>\n                                    </li>\n                                    <li className=\"nav-item\" role=\"presentation\">\n                                        <button className=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#profile\" type=\"button\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Add voice annotation</button>\n                                    </li>\n\n                                </ul>\n                                <div className=\"tab-content\" id=\"myTabContent\">\n                                    <div className=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\n                                        <div className='add_annotation'>\n                                            <h3>Add text annotation </h3>\n                                            <textarea\n                                                value={annotationText}\n                                                onChange={handleAnnotationTextChange}\n                                                rows={5}\n                                                cols={30}\n                                            />\n                                            <button onClick={handleAddTextAnnotation} disabled={!annotationText}>Add</button>\n                                        </div>\n\n\n                                    </div>\n\n                                    <div className=\"tab-pane fade\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\n\n                                        <h3>Add voice annotation</h3>\n                                        <div className='add_annotation'>\n\n                                            {recordedBlob && (\n                                                <>\n                                                    <audio controls src={URL.createObjectURL(recordedBlob)} />\n                                                </>\n                                            )}\n\n                                            {recording ? (\n                                                <button disabled={recording}>\n                                                    <BsFillRecordCircleFill color='red' /> Recording...\n                                                </button>\n                                            ) : (\n                                                <button onClick={startRecording} disabled={recording}>\n                                                    Start Recording\n                                                </button>\n                                            )}\n\n\n                                            <button onClick={stopRecording} disabled={!recording}>\n                                                Stop Recording\n                                            </button>\n                                            <button onClick={saveAudioAnnotation} disabled={recording || !recordedBlob}>Save Recorded Annotation</button>\n\n\n                                        </div>\n\n\n\n                                    </div>\n\n                                </div>\n\n\n\n\n\n                            </div>\n\n                        </div>\n\n                        <div className='col-md-6'>\n                            <div className='tab_section' >\n                                <h3>Added Annotations</h3>\n                                {analysisVideo.text_annotation.map((text, index) => (\n                                    <div className='add_annotation'>\n                                        <textarea\n                                            key={index}\n                                            value={text}\n                                            disabled\n                                        />\n                                        <div className='add_annotation_button'>\n                                            <button onClick={() => handleDeleteTextAnnotation(text)}><AiOutlineDelete /></button>\n                                        </div>\n                                    </div>\n\n                                ))}\n\n                                {analysisVideo.audio_annotation.map((audioURL, index) => (\n                                    <div className='add_annotation'>\n                                        <audio\n                                            controls\n                                            src={audioURL}\n                                        >\n                                        </audio>\n                                        <div className='add_annotation_button'>\n                                            <button onClick={() => handleDeleteAudioAnnotation(audioURL)}><AiOutlineDelete /></button>\n                                        </div>\n                                    </div>\n                                ))}\n\n\n\n                            </div>\n\n                        </div>\n\n\n\n\n\n\n                    </div>\n\n\n\n\n\n\n\n                </>\n\n            ) : (\n                <div className='tab_section' >\n                    <h3>Please Select a segment to analyze.</h3>\n                </div>\n            )}\n\n        </>\n\n    )\n}\n\nexport default ResultPage","import React, { useEffect, useRef, useState } from 'react'\nimport { FFmpeg } from '@ffmpeg/ffmpeg';\nimport { fetchFile, toBlobURL } from '@ffmpeg/util';\nimport { BsDownload } from 'react-icons/bs';\nimport axios from 'axios';\nimport { useUserContext } from '../contexts/UserContext';\nimport { useAlertContext } from '../contexts/AlertContext';\nimport { useLoaderContext } from '../contexts/LoaderContext';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { BiCut } from 'react-icons/bi';\n\nimport Slider, { SliderThumb } from '@mui/material/Slider';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\n\n\nconst EditPage = ({ editVideoSrc, setAnalysisVideo, setSelectedIndex, segmentVideoRef, segmentVideos, setSegmentVideos, setThreeDModelLink}) => {\n    const [loaded, setLoaded] = useState(false);\n    const ffmpegRef = useRef(new FFmpeg());\n    const trimVideoRef = useRef(null);\n    const [videoTrimmedUrl, setVideoTrimmedUrl] = useState('');\n    const { loginUser } = useUserContext();\n    const { setAlertMessage, setShowAlert } = useAlertContext();\n    const { setIsLoading } = useLoaderContext();\n    const [endTime, setEndTime] = useState(0);\n    const [startTime, setStartTime] = useState(0);\n\n    const [editedVideoEndTime, setEditedVideoEndTime] = useState(0);\n    const [editedVideoStartTime, setEditedVideoStartTime] = useState(0);\n\n    const videoRef = useRef();\n    const [videoDuration, setVideoDuration] = useState('');\n\n\n\n\n\n    const handleVideoMetadata = () => {\n        if (videoRef.current) {\n            setVideoDuration(videoRef.current.duration);\n            setEndTime(videoRef.current.duration)\n        }\n    };\n\n\n    const handleStartTimeChange = (e) => {\n        const newStartTime = parseFloat(e.target.value, 10);\n        setStartTime(newStartTime);\n    };\n\n    const handleEndTimeChange = (e) => {\n        const newEndTime = parseFloat(e.target.value, 10);\n        setEndTime(newEndTime);\n    };\n\n\n\n    const load = async () => {\n        const baseURL = 'https://unpkg.com/@ffmpeg/core@0.12.2/dist/umd'\n        const ffmpeg = ffmpegRef.current;\n        ffmpeg.on('log', ({ message }) => {\n            console.log(message);\n        });\n        // toBlobURL is used to bypass CORS issue, urls with the same\n        // domain can be used directly.\n        await ffmpeg.load({\n            coreURL: await toBlobURL(`${baseURL}/ffmpeg-core.js`, 'text/javascript'),\n            wasmURL: await toBlobURL(`${baseURL}/ffmpeg-core.wasm`, 'application/wasm'),\n        });\n    }\n\n    useEffect(() => {\n        load().then(() => {\n            setLoaded(true);\n        });\n    }, []);\n\n\n\n\n    const convertToHHMMSS = (val) => {\n        const secNum = parseInt(val, 10);\n        let hours = Math.floor(secNum / 3600);\n        let minutes = Math.floor((secNum - hours * 3600) / 60);\n        let seconds = secNum - hours * 3600 - minutes * 60;\n\n        if (hours < 10) {\n            hours = '0' + hours;\n        }\n        if (minutes < 10) {\n            minutes = '0' + minutes;\n        }\n        if (seconds < 10) {\n            seconds = '0' + seconds;\n        }\n        let time;\n        // only mm:ss\n        if (hours === '00') {\n            time = minutes + ':' + seconds;\n        } else {\n            time = hours + ':' + minutes + ':' + seconds;\n        }\n        return time;\n    };\n\n\n    const handleTrim = async () => {\n        if (loaded) {\n            setIsLoading(true)\n            try {\n                const ffmpeg = ffmpegRef.current;\n                await ffmpeg.writeFile('input.mp4', await fetchFile(editVideoSrc));\n\n                // Calculate the start and end times in seconds\n                const startTimeInSeconds = parseInt(startTime, 10);\n                const endTimeInSeconds = parseInt(endTime, 10);\n\n                // Calculate the duration in seconds\n                const durationInSeconds = endTimeInSeconds - startTimeInSeconds;\n\n                await ffmpeg.exec([\n                    '-i',\n                    'input.mp4',\n                    '-ss',\n                    convertToHHMMSS(startTimeInSeconds),\n                    '-t',\n                    convertToHHMMSS(durationInSeconds),\n                    '-c:v',\n                    'copy',\n                    '-c:a',\n                    'copy',\n                    'output.mp4'\n                ]);\n                const data = await ffmpeg.readFile('output.mp4');\n                if (trimVideoRef.current) {\n                    trimVideoRef.current.src = URL.createObjectURL(new Blob([data.buffer], { type: 'video/mp4' }));\n                }\n\n                const url = URL.createObjectURL(\n                    new Blob([data.buffer], { type: 'video/mp4' }),\n                );\n                setVideoTrimmedUrl(url);\n                setEditedVideoStartTime(startTime)\n                setEditedVideoEndTime(endTime)\n            } catch (error) {\n                setAlertMessage('Error while trimming the video:', error);\n                setShowAlert(true)\n            }\n            setIsLoading(false)\n        }\n\n    }\n\n\n    const fetchSegmentVideos = async (email) => {\n        try {\n            const response = await axios.get(`/api/load_video_segments?email=${email}`);\n            const filteredSegments = response.data.videoSegments.filter((segment) => {\n                return segment.mainVideoURL === editVideoSrc;\n            });\n            // console.log(response.data)\n\n            setSegmentVideos(filteredSegments);\n        } catch (error) {\n            setAlertMessage('Error loading video:', error);\n            setShowAlert(true)\n        }\n    };\n\n    const saveTrimmedVideo = () => {\n        if (videoTrimmedUrl) {\n            setIsLoading(true)\n            fetch(videoTrimmedUrl)\n                .then((response) => response.blob())\n                .then((blob) => {\n                    // Create a FormData object and append the blob\n\n                    const formData = new FormData();\n                    formData.append('file', blob);\n                    const userEmail = loginUser.email;\n                    // Append the user's email address to the FormData\n                    formData.append('email', userEmail);\n                    formData.append('main_video_url', editVideoSrc);\n                    formData.append('start_time', editedVideoStartTime);\n                    formData.append('end_time', editedVideoEndTime);\n                    formData.append('main_video_duration', videoDuration);\n\n\n                    // Send the FormData to your Flask backend for uploading to Cloudinary\n                    axios.post('/api/save_trimmed_video', formData, {\n                        headers: {\n                            'Content-Type': 'multipart/form-data',\n                        },\n                    })\n                        .then((response) => {\n                            // console.log('Trimmed video uploaded successfully:', response.data);\n                            setAlertMessage(response.data.message);\n                            setShowAlert(true)\n                            fetchSegmentVideos(loginUser.email)\n                            if (trimVideoRef.current) {\n                                trimVideoRef.current.src = \"\"\n                            }\n                            setVideoTrimmedUrl(\"\")\n\n                            setIsLoading(false)\n\n\n                        })\n                        .catch((error) => {\n                            setAlertMessage(\"Error saving secure URL and user email:\", error);\n                            setShowAlert(true)\n\n                        });\n                })\n                .catch((error) => {\n                    setAlertMessage(\"Error saving secure URL and user email:\", error);\n                    setShowAlert(true)\n\n                });\n        } else {\n            setAlertMessage(\"No trimmed video URL provided\");\n            setShowAlert(true)\n        }\n    };\n\n\n    const handleDownloadTrimmedVideo = () => {\n        if (videoTrimmedUrl) {\n            setIsLoading(true)\n            const a = document.createElement('a');\n            a.href = videoTrimmedUrl;\n            a.download = 'trimmed_video.mp4'; // You can set the desired filename here\n            a.click();\n            setIsLoading(false)\n        }\n    };\n\n\n\n\n    const handleDeleteSegment = (videoItem) => {\n        const confirmed = window.confirm(\"Are you sure you want to delete this video?\");\n        if (!confirmed) {\n            return;\n        }\n        try {\n            setIsLoading(true)\n            axios.delete('/api/delete_video_segment', {\n                data: { videoItem, email: loginUser.email },\n            })\n                .then((response) => {\n                    setAlertMessage('Video deleted successfully');\n                    setShowAlert(true);\n                    // console.log(response.data);\n                    fetchSegmentVideos(loginUser.email);\n                })\n                .catch((error) => {\n                    setAlertMessage('Error deleting video:', error);\n                    setShowAlert(true);\n                });\n            fetchSegmentVideos(loginUser.email);\n            setIsLoading(false)\n        } catch (error) {\n            setAlertMessage('Error deleting video:', error);\n            setShowAlert(true);\n        }\n    };\n\n\n\n\n    const EditSlider = styled(Slider)(({ theme }) => ({\n        color: '#3a8589',\n        height: 3,\n        padding: '13px 0',\n        '& .MuiSlider-thumb': {\n            height: 27,\n            width: 27,\n            backgroundColor: '#fff',\n            border: '1px solid currentColor',\n            '&:hover': {\n                boxShadow: '0 0 0 8px rgba(58, 133, 137, 0.16)',\n            },\n            '& .airbnb-bar': {\n                height: 9,\n                width: 1,\n                backgroundColor: 'currentColor',\n                marginLeft: 1,\n                marginRight: 1,\n            },\n        },\n        '& .MuiSlider-track': {\n            height: 4,\n        },\n        '& .MuiSlider-rail': {\n            color: theme.palette.mode === 'dark' ? '#bfbfbf' : '#d8d8d8',\n            opacity: theme.palette.mode === 'dark' ? undefined : 1,\n            height: 3,\n        },\n    }));\n\n    function EditSliderThumbComponent(props) {\n        const { children, ...other } = props;\n        return (\n            <SliderThumb {...other}>\n                {children}\n                <span className=\"airbnb-bar\" />\n                <span className=\"airbnb-bar\" />\n                <span className=\"airbnb-bar\" />\n            </SliderThumb>\n        );\n    }\n\n    EditSliderThumbComponent.propTypes = {\n        children: PropTypes.node,\n    };\n\n\n\n    const handleRunModel = (videoItem) => {\n        if (videoItem) {\n            setIsLoading(true)\n            axios\n                .post('/api/threeD_model', {\n                    videoItem: videoItem.segmentURL,\n                })\n                .then((res) => {\n                    setAnalysisVideo(videoItem)\n                    if (segmentVideoRef.current) {\n                        segmentVideoRef.current.src = videoItem.segmentURL\n                    }\n                    console.log(res.data.threeDModelLink)\n                    // if (res.data.threeDModelLink) {\n                    //     setThreeDModelLink(res.data.threeDModelLink)\n                    //     setIsLoading(false)\n                    // }\n                    if (res.data.threeDModelLink) {\n                        // Delay setting the threeDModelLink by 5 seconds\n                        setTimeout(() => {\n                            setThreeDModelLink(res.data.threeDModelLink);\n                            setAlertMessage(res.data.message);\n                            setShowAlert(true)\n                            setIsLoading(false);\n                            setSelectedIndex(2)\n                        }, 5000); // 5000 milliseconds = 5 seconds\n                    }\n\n                })\n                .catch((err) => {\n                    setAlertMessage(\"An error occurred\" + err)\n                    setShowAlert(true)\n                    setIsLoading(false)\n\n                });\n\n        } else {\n            setAlertMessage(\"Invalid input\")\n            setShowAlert(true)\n        }\n    }\n\n\n\n    return ((\n        <>\n            <div className='tab_section'>\n                <h1>Edit Video</h1>\n            </div>\n\n            {editVideoSrc !== \"\" ? (\n                <>\n                    <div className='video_player tab_section'>\n                        <video\n                            controls\n                            ref={videoRef}\n                            // autoPlay\n                            muted\n                            src={editVideoSrc}\n                            onLoadedMetadata={handleVideoMetadata}\n                        >\n                        </video>\n                    </div>\n                    <div className='tab_section'>\n                        <label>Trim Video:</label>\n\n                        <div className='trim_video_section'>\n                            <input\n                                type=\"number\"\n                                value={startTime}\n                                min={0}\n                                max={endTime}\n                                onChange={handleStartTimeChange}\n                                step=\"0.5\"\n                                style={{ marginRight: \"15px\" }}\n                            />\n\n\n                            <EditSlider\n                                valueLabelDisplay=\"auto\"\n                                min={0}\n                                max={videoDuration}\n                                slots={{ thumb: EditSliderThumbComponent }}\n                                getAriaLabel={(index) => (index === 0 ? 'Min Value' : 'Max value')}\n                                value={[startTime, endTime]}\n                                onChange={(event, values) => {\n                                    setStartTime(values[0]);\n                                    setEndTime(values[1]);\n                                }}\n                                step={0.5}\n                            // valueLabelDisplay=\"on\"\n                            />\n\n                            {/* <label>Start Time (seconds):</label> */}\n\n\n                            {/* <label>End Time (seconds):</label> */}\n                            <input\n                                type=\"number\"\n                                min={startTime}\n                                max={videoDuration}\n                                value={endTime}\n                                onChange={handleEndTimeChange}\n                                step=\"0.5\"\n                                style={{ marginLeft: \"15px\" }}\n                            />\n\n                            {/* <br /> */}\n\n                        </div>\n                        <button className=\"general_btn\" onClick={handleTrim}>Trim <BiCut /></button>\n                    </div>\n\n\n                    <div className='row'>\n\n\n                        {videoTrimmedUrl && (\n                            <div className='col-md-6' style={{ marginBottom: \"15px\" }}>\n                                <div>\n                                    <video controls width=\"100%\"\n                                        ref={trimVideoRef}\n                                        src={videoTrimmedUrl}\n                                    // type={videoFileValue.type}\n                                    >\n                                    </video>\n                                </div>\n                                <Slider\n                                    disabled\n                                    marks={true}\n                                    min={0}\n                                    max={videoDuration}\n                                    value={[editedVideoStartTime, editedVideoEndTime]}\n                                    size=\"small\"\n                                    valueLabelDisplay=\"on\"\n                                />\n                                <div className=\"video_btns\">\n                                    <button onClick={saveTrimmedVideo}>Save Video</button>\n                                    <button className='' onClick={handleDownloadTrimmedVideo}><BsDownload /></button>\n                                </div>\n                            </div>\n                        )}\n\n                        {segmentVideos && segmentVideos.map((videoItem, index) => (\n                            <div key={index} className='col-md-6' style={{ marginBottom: \"15px\" }}>\n                                <video controls width=\"100%\">\n                                    <source src={videoItem.segmentURL} type=\"video/mp4\" />\n                                    Your browser does not support the video tag.\n                                </video>\n\n                                <Slider\n                                    disabled\n                                    marks={true}\n                                    min={0}\n                                    max={videoItem.main_video_duration}\n                                    value={[videoItem.start_time, videoItem.end_time]}\n                                    size=\"small\"\n                                    valueLabelDisplay=\"on\"\n                                />\n\n                                <div className=\"video_btns\">\n                                    <button onClick={() => handleDeleteSegment(videoItem)}><AiOutlineDelete /></button>\n                                    <button onClick={() => handleRunModel(videoItem)}>Run Model</button>\n                                </div>\n                            </div>\n                        ))}\n\n\n\n\n\n                    </div>\n\n\n\n\n\n\n\n                </>\n            ) : (\n                <div>\n                    <div className='tab_section'>\n                        <h3>Please Select a video to Edit</h3>\n                    </div>\n                </div>\n            )}\n\n        </>\n    )\n    );\n}\n\nexport default EditPage","import React, { useEffect, useRef, useState } from 'react';\nimport { AiFillCamera } from 'react-icons/ai';\nimport { MdDelete } from 'react-icons/md';\nimport { BsFillRecordCircleFill } from 'react-icons/bs';\nimport Webcam from 'react-webcam';\nimport RecordRTC from 'recordrtc';\nimport { useUserContext } from '../contexts/UserContext';\nimport { useAlertContext } from '../contexts/AlertContext';\nimport { useLoaderContext } from '../contexts/LoaderContext';\nimport axios from 'axios';\nimport { FFmpeg } from '@ffmpeg/ffmpeg';\nimport { fetchFile, toBlobURL } from '@ffmpeg/util';\n\nconst LiveRecording = ({ fetchVideos, setActiveTab }) => {\n  const { loginUser } = useUserContext();\n  const { setAlertMessage, setShowAlert } = useAlertContext();\n  const { setIsLoading } = useLoaderContext();\n\n  const webcamRef = useRef(null);\n  const [recorder, setRecorder] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n\n  const [isCameraOpen, setIsCameraOpen] = useState(false);\n  const [recordedVideoURL, setRecordedVideoURL] = useState('');\n  const ffmpegRef = useRef(new FFmpeg());\n  const [loaded, setLoaded] = useState(false);\n  // const [videoConvertedUrl, setVideoConvertedUrl] = useState('');\n\n  const load = async () => {\n    const baseURL = 'https://unpkg.com/@ffmpeg/core@0.12.2/dist/umd'\n    const ffmpeg = ffmpegRef.current;\n    ffmpeg.on('log', ({ message }) => {\n      console.log(message);\n    });\n    await ffmpeg.load({\n      coreURL: await toBlobURL(`${baseURL}/ffmpeg-core.js`, 'text/javascript'),\n      wasmURL: await toBlobURL(`${baseURL}/ffmpeg-core.wasm`, 'application/wasm'),\n    });\n  }\n\n  useEffect(() => {\n    load().then(() => {\n      setLoaded(true);\n    });\n  }, []);\n\n\n  // const handleConvert = async () => {\n  //   if (loaded && recordedVideoURL) {\n  //     try {\n  //       const ffmpeg = ffmpegRef.current;\n  //       console.log(\"conver function run\")\n  //       await ffmpeg.writeFile('input.mkv', await fetchFile(recordedVideoURL));\n\n\n  //       await ffmpeg.exec([\n  //         '-i',\n  //         'input.mkv',\n  //         '-c:v',\n  //         'copy',\n  //         '-c:a',\n  //         'copy',\n  //         'output.mp4'\n  //       ]);\n  //       const data = await ffmpeg.readFile('output.mp4');\n\n  //       const url = URL.createObjectURL(\n  //         new Blob([data.buffer], { type: 'video/mp4' }),\n  //       );\n  //       setVideoConvertedUrl(url)\n  //     } catch (error) {\n  //       setAlertMessage('Error while trimming the video:', error);\n  //       setShowAlert(true)\n  //     }\n  //   }\n\n  // }\n\n  // console.log(\"recordedVideoURL\", recordedVideoURL)\n  // console.log(\"videoConvertedUrl\", videoConvertedUrl)\n\n  const handleRecordedVideoUpload = async () => {\n    if (loaded && recordedVideoURL && loginUser.email) {\n      setIsLoading(true);\n  \n      const formData = new FormData();\n      const userEmail = loginUser.email;\n  \n      try {\n        const ffmpeg = ffmpegRef.current;\n        await ffmpeg.writeFile('input.mkv', await fetchFile(recordedVideoURL));\n  \n        await ffmpeg.exec([\n          '-i',\n          'input.mkv',\n          '-c:v',\n          'copy',\n          '-c:a',\n          'copy',\n          'output.mp4'\n        ]);\n  \n        const data = await ffmpeg.readFile('output.mp4');\n  \n        const url = URL.createObjectURL(\n          new Blob([data.buffer], { type: 'video/mp4' })\n        );\n  \n        const blob = await fetch(url).then((response) => response.blob());\n        formData.append('file', blob, 'output.mp4');\n        formData.append('email', userEmail);\n  \n        const response = await axios.post('/api/upload_video', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n  \n        setAlertMessage(response.data.message);\n        setShowAlert(true);\n  \n        // Clear the recorded video URL\n        setRecordedVideoURL('');\n        fetchVideos(loginUser.email);\n        setActiveTab('media');\n        setIsLoading(false);\n      } catch (error) {\n        setAlertMessage('Error while converting or uploading the video:', error);\n        setShowAlert(true);\n      }\n    } else {\n      setAlertMessage('Please record a video before uploading.');\n      setShowAlert(true);\n    }\n  };\n  \n\n\n\n\n  const startCamera = () => {\n    setIsCameraOpen(true);\n  };\n  const closeCamera = () => {\n    setIsCameraOpen(false);\n  };\n\n\n\n  const startRecording = () => {\n    const webcam = webcamRef.current.video;\n    const options = {\n      mimeType: 'video/webm',\n      bitsPerSecond: 128000,\n\n    };\n    const stream = webcam.captureStream();\n    const record = RecordRTC(stream, options);\n    record.startRecording();\n    setRecorder(record);\n    setIsRecording(true);\n  };\n\n  const stopRecording = () => {\n    recorder.stopRecording(() => {\n      const blob = recorder.getBlob();\n      const url = URL.createObjectURL(blob);\n      setRecordedVideoURL(url);\n\n\n      setIsRecording(false);\n      setIsCameraOpen(false);\n    });\n  };\n\n\n\n\n  return (\n    <div>\n      {!isCameraOpen && (\n        <div className='open_camera_section'>\n          <button className=\"open_camera_btn\" onClick={startCamera}>\n\n            <AiFillCamera color='#1475cf' size={60} />\n            <br />\n            <p>Open Camera</p>\n\n          </button>\n        </div>\n      )}\n\n\n\n\n      {/* <button onClick={handleConvert}>Convert</button>\n      {videoConvertedUrl && (\n        <video\n        controls\n        src={videoConvertedUrl}\n        />\n      )} */}\n\n\n\n      {isCameraOpen && (\n        <div className=\"webcam_container\">\n          <Webcam\n            audio={true}\n            videoConstraints={{\n              // width: { min: 1280 },\n              // height: { min: 720 },\n              aspectRatio: 1.77777778,\n              // width: \"100%\",\n              // height: \"100%\",\n              facingMode: \"user\",\n\n            }}\n            ref={webcamRef}\n            screenshotFormat=\"image/jpeg\"\n          />\n\n\n        </div>\n      )}\n\n\n      {isCameraOpen && !isRecording && (\n        <>\n          <div className='uploaded-row'>\n            <span className='upload-content'>\n              <button className=\"btn btn-outline-secondary\" onClick={startRecording}>\n                Start Recording\n              </button>\n            </span>\n\n            <span className='upload-content'>\n              <button className=\"btn btn-outline-secondary\" disabled={isRecording} onClick={closeCamera}>\n                Close Camera\n              </button>\n            </span>\n          </div>\n        </>\n\n      )}\n\n      {isRecording && (\n        <div className='uploaded-row'>\n          <button className=\"btn btn-outline-secondary\" onClick={stopRecording}>\n            Stop Recording\n          </button>\n          <button disabled className=\"btn btn-outline-secondary\">\n            <BsFillRecordCircleFill color='red' /> Recording..\n          </button>\n\n        </div>\n      )}\n\n\n\n\n      {recordedVideoURL && (\n        <div className=\"webcam_container\">\n          <p>Recorded Video</p>\n          <div className=\"webcam_container_video\">\n            <video\n              autoPlay\n              controls\n              src={recordedVideoURL}\n            ></video>\n\n          </div>\n\n          <div className='uploaded-row'>\n            <span className='upload-content'>\n              <button className='delete_btn'>\n                <MdDelete\n                  onClick={() => {\n                    setRecordedVideoURL(\"\")\n                    // setRecordedVideoFile(null)\n                  }}\n                />\n              </button>\n            </span>\n\n            <span className='upload-content'>\n              <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={handleRecordedVideoUpload}> Upload </button>\n            </span>\n          </div>\n\n        </div>\n      )}\n\n\n    </div>\n  );\n};\n\nexport default LiveRecording;\n","export const cloudinaryVideosData=[\n    {\n        VideoLink:\"https://res.cloudinary.com/doi281cds/video/upload/v1700644205/kid_boxing_qkwozp.mp4\",\n    },\n    {\n        VideoLink:\"https://res.cloudinary.com/doi281cds/video/upload/v1697274754/RingMaster/My_Video_7_ukrh5r.mov\",\n    },\n    // {\n    //     VideoLink:\"https://res.cloudinary.com/doi281cds/video/upload/v1697274722/RingMaster/My_Video_6_map84s.mov\",\n    // },\n    {\n        VideoLink:\"https://res.cloudinary.com/doi281cds/video/upload/v1697274721/RingMaster/My_Video_11_zv5frz.mov\",\n    },   \n    // {\n    //     VideoLink:\"https://res.cloudinary.com/doi281cds/video/upload/v1697274720/RingMaster/My_Video_4_tg0zyq.mov\",\n    // },\n    // {\n    //     VideoLink:\"https://res.cloudinary.com/doi281cds/video/upload/v1697274716/RingMaster/My_Video_2_odr8o5.mov\",\n    // },\n    {\n        VideoLink:\"https://res.cloudinary.com/doi281cds/video/upload/v1697274715/RingMaster/My_Video_10_uldwdm.mov\",\n    },   \n    // {\n    //     VideoLink:\"https://res.cloudinary.com/doi281cds/video/upload/v1697274715/RingMaster/My_Video_5_gdgbrb.mov\",\n    // },\n    // {\n    //     VideoLink:\"https://res.cloudinary.com/doi281cds/video/upload/v1697274714/RingMaster/My_Video_3_sr8wg1.mov\",\n    // },\n    {\n        VideoLink:\"https://res.cloudinary.com/doi281cds/video/upload/v1697274714/RingMaster/My_Video_8_s6rq35.mov\",\n    },   \n    {\n        VideoLink:\"https://res.cloudinary.com/doi281cds/video/upload/v1697274714/RingMaster/My_Video_9_oey8wh.mov\",\n    },\n    {\n        VideoLink:\"https://res.cloudinary.com/doi281cds/video/upload/v1697274714/RingMaster/My_Video_okqbmq.mov\",\n    },\n \n]\n\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLoaderContext } from '../contexts/LoaderContext';\nimport { useAlertContext } from '../contexts/AlertContext';\nimport { useUserContext } from '../contexts/UserContext';\nimport { cloudinaryVideosData } from '../data/cloudinaryVideos';\n\nconst StockVideos = ({fetchVideos, setActiveTab}) => {\n  const { loginUser } = useUserContext();\n  const { setAlertMessage, setShowAlert } = useAlertContext();\n  const { setIsLoading } = useLoaderContext();\n\n  const handleUpload = async (videoUrl) => {\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('videoUrl', videoUrl);\n    formData.append('email', loginUser.email);\n\n    try {\n      const response = await axios.post('/api/upload_stock_video', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      setAlertMessage(response.data.message);\n      setShowAlert(true);\n      fetchVideos(loginUser.email);\n      setActiveTab(\"media\")\n\n    } catch (error) {\n      setAlertMessage('Error: ' + error.message);\n      setShowAlert(true);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"video-list\">\n      <div className='row'>\n\n\n        {cloudinaryVideosData.map((video, index) => (\n          <div key={index} className=\"col-md-6\">\n            <div className='video_list'>\n\n              <video\n                // autoPlay\n                controls\n                src={video.VideoLink}\n              ></video>\n\n              <div className=\"video_btns\">\n                <button onClick={() => handleUpload(video.VideoLink)}>Upload</button>\n              </div>\n            </div>\n          </div>\n        ))}\n\n      </div>\n    </div>\n  );\n};\n\nexport default StockVideos;\n","import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { useUserContext } from '../contexts/UserContext';\nimport { useAlertContext } from '../contexts/AlertContext';\nimport { useLoaderContext } from '../contexts/LoaderContext';\nimport { MdCloudUpload, MdDelete } from 'react-icons/md'\nimport { AiFillFileImage } from 'react-icons/ai'\n\nimport LiveRecording from './LiveRecording';\nimport StockVideos from './StockVideos';\n\n\nconst VideoUploadToCloud = ({ setEditVideoSrc, setSelectedIndex, setSegmentVideos }) => {\n    const { loginUser } = useUserContext();\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [videosUrls, setVideosUrls] = useState([]);\n    const { setAlertMessage, setShowAlert } = useAlertContext();\n    const fileInputRef = useRef(null); // Ref for the file input\n    const { setIsLoading } = useLoaderContext();\n    const [fileName, setFileName] = useState(\"No selected file\")\n    const [activeTab, setActiveTab] = useState(\"media\");\n\n    const fetchVideos = async (email) => {\n        try {\n            const response = await axios.get(`/api/load_videos?email=${email}`);\n            setVideosUrls(response.data.videosUrls);\n        } catch (error) {\n            setAlertMessage('Error loading video:', error);\n            setShowAlert(true)\n        }\n    };\n\n    useEffect(() => {\n        fetchVideos(loginUser.email); // Pass loginUser.email as an argument\n    }, [loginUser.email]);\n\n\n    const handleFileChange = (event) => {\n        const file = event.target.files[0]\n        if (file.size > 10 * 1024 * 1024) {\n            setAlertMessage('File size exceeds 10MB');\n            setShowAlert(true)\n            if (fileInputRef.current) {\n                fileInputRef.current.value = '';\n            }\n            return;\n        }\n        setSelectedFile(file);\n        setFileName(file.name)\n    };\n\n\n    const handleUpload = () => {\n        if (selectedFile && loginUser.email) {\n            setIsLoading(true)\n            const formData = new FormData();\n            formData.append('file', selectedFile);\n            const userEmail = loginUser.email;\n            // Append the user's email address to the FormData\n            formData.append('email', userEmail);\n\n            axios.post('/api/upload_video', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            })\n                .then((response) => {\n                    setAlertMessage(response.data.message);\n                    setShowAlert(true)\n                    setSelectedFile(null);\n\n                    if (fileInputRef.current) {\n                        fileInputRef.current.value = '';\n                    }\n                    fetchVideos(loginUser.email);\n                    setIsLoading(false)\n                    setActiveTab(\"media\");\n                })\n                .catch((error) => {\n                    setAlertMessage(\"Error saving secure URL and user email:\", error);\n                    setShowAlert(true)\n                })\n\n        } else {\n            setAlertMessage('Please select the file');\n            setShowAlert(true)\n        }\n    };\n\n\n    const handleDeleteVideo = (videoUrl) => {\n        const confirmed = window.confirm(\"Are you sure you want to delete this video?\");\n        if (!confirmed) {\n            return;\n        }\n        try {\n            setIsLoading(true)\n            axios.delete('/api/delete_video', {\n                data: { videoUrl, email: loginUser.email },\n            })\n                .then((response) => {\n                    setAlertMessage(response.data.message);\n                    setShowAlert(true);\n                    fetchVideos(loginUser.email);\n                })\n                .catch((error) => {\n                    setAlertMessage('Error deleting video:', error);\n                    setShowAlert(true);\n                });\n            fetchVideos(loginUser.email);\n            setIsLoading(false)\n        } catch (error) {\n            setAlertMessage('Error deleting video:', error);\n            setShowAlert(true);\n        }\n    };\n\n\n    const fetchSegmentVideos = async (email, videoUrl) => {\n        try {\n            const response = await axios.get(`/api/load_video_segments?email=${email}`);\n\n            const filteredSegments = response.data.videoSegments.filter((segment) => {\n                return segment.mainVideoURL === videoUrl;\n            });\n            setSegmentVideos(filteredSegments);\n        } catch (error) {\n            setAlertMessage('Error loading video:', error);\n            setShowAlert(true)\n        }\n    };\n\n\n    const handleEditVideo = (videoUrl) => {\n        setEditVideoSrc(videoUrl)\n        fetchSegmentVideos(loginUser.email, videoUrl)\n        setSelectedIndex(1)\n    }\n\n\n    return (\n        <>\n\n            <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n                {/* <li className=\"nav-item\" role=\"presentation\">\n                    <button className=\"nav-link active\" id=\"tab-1\" data-bs-toggle=\"tab\" data-bs-target=\"#media\" type=\"button\" role=\"tab\" aria-controls=\"media\" aria-selected=\"true\">Media</button>\n                </li> */}\n                <li className=\"nav-item\" role=\"presentation\">\n                    <button\n                        className={`nav-link ${activeTab === \"media\" ? \"active\" : \"\"}`}\n                        data-bs-toggle=\"tab\"\n                        id=\"tab-1\"\n                        data-bs-target=\"#media\"\n                        type=\"button\"\n                        role=\"tab\"\n                        aria-controls=\"media\"\n                        aria-selected={activeTab === \"media\"}\n                        onClick={() => setActiveTab(\"media\")} // Add this onClick handler\n                    >\n                        Media\n                    </button>\n                </li>\n\n                <li className=\"nav-item\" role=\"presentation\">\n                    <button onClick={() => setActiveTab(\"upload\")} className={`nav-link ${activeTab === \"upload\" ? \"active\" : \"\"}`} id=\"tab-2\" data-bs-toggle=\"tab\" data-bs-target=\"#upload\" type=\"button\" role=\"tab\" aria-controls=\"upload\" aria-selected=\"false\">Upload</button>\n                </li>\n                <li className=\"nav-item\" role=\"presentation\">\n                    <button onClick={() => setActiveTab(\"record\")} className={`nav-link ${activeTab === \"record\" ? \"active\" : \"\"}`} id=\"tab-3\" data-bs-toggle=\"tab\" data-bs-target=\"#record\" type=\"button\" role=\"tab\" aria-controls=\"record\" aria-selected=\"false\">Record</button>\n                </li>\n                <li className=\"nav-item\" role=\"presentation\">\n                    <button onClick={() => setActiveTab(\"youtube\")} className={`nav-link ${activeTab === \"youtube\" ? \"active\" : \"\"}`} id=\"tab-4\" data-bs-toggle=\"tab\" data-bs-target=\"#youtube\" type=\"button\" role=\"tab\" aria-controls=\"youtube\" aria-selected=\"false\">Stock Videos</button>\n                </li>\n            </ul>\n\n\n            <div className=\"tab-content\" id=\"myTabContent\">\n                <div className={`tab-pane fade ${activeTab === \"media\" ? \"show active\" : \"\"}`} id=\"media\" role=\"tabpanel\" aria-labelledby=\"tab-1\">\n                    <div className='row'>\n                        {videosUrls && (\n                            <>\n                                {videosUrls.map((videoUrl, index) => (\n                                    <div key={index} className='col-md-6' style={{ marginBottom: \"15px\" }}>\n                                        <div className='video_list'>\n                                            <video controls src={videoUrl}>\n                                            </video>\n\n                                            <div className=\"video_btns\">\n                                                <button onClick={() => handleEditVideo(videoUrl)}>Edit Video</button>\n                                                <button onClick={() => handleDeleteVideo(videoUrl)}><MdDelete color='#1475cf' /></button>\n\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                ))}\n                            </>\n                        )}\n\n                    </div>\n                </div>\n\n                <div className={`tab-pane fade ${activeTab === \"upload\" ? \"show active\" : \"\"}`} id=\"upload\" role=\"tabpanel\" aria-labelledby=\"tab-2\">\n\n                    <form\n                        onClick={() => document.querySelector(\".input-field\").click()}\n                        className='file_upload_field'\n                    >\n                        <input\n                            type=\"file\"\n                            accept='video/*'\n                            className='input-field' hidden\n                            onChange={handleFileChange}\n                            ref={fileInputRef}\n                        />\n\n                        {selectedFile ?\n                            <p>{fileName}</p>\n                            :\n                            <>\n                                <MdCloudUpload color='#1475cf' size={60} />\n                                <br />\n                                <p>Browse Files to upload</p>\n                            </>\n                        }\n\n                    </form>\n\n                    <div className='uploaded-row'>\n                        <span className='upload-content'>\n                            <AiFillFileImage color='#1475cf' />\n                            {fileName} -\n                            <button className='delete_btn'>\n                                <MdDelete\n                                    color='#1475cf'\n                                    onClick={() => {\n                                        setFileName(\"No selected file\")\n                                        setSelectedFile(null)\n                                    }}\n                                />\n                            </button>\n                        </span>\n\n                        <span className='upload-content'>\n                            <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={handleUpload}> Upload </button>\n\n                        </span>\n                    </div>\n\n                </div>\n                <div className={`tab-pane fade ${activeTab === \"record\" ? \"show active\" : \"\"}`} id=\"record\" role=\"tabpanel\" aria-labelledby=\"tab-3\">\n                    <LiveRecording\n                        fetchVideos={fetchVideos}\n                        setActiveTab={setActiveTab}\n                    />\n                </div>\n                <div className={`tab-pane fade ${activeTab === \"youtube\" ? \"show active\" : \"\"}`} id=\"youtube\" role=\"tabpanel\" aria-labelledby=\"tab-4\">\n                    <StockVideos\n                        fetchVideos={fetchVideos}\n                        setActiveTab={setActiveTab} />\n                </div>\n            </div>\n\n\n\n\n\n\n\n\n\n        </>\n    );\n};\n\nexport default VideoUploadToCloud;\n","import React, { useRef, useState } from 'react'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport Navbar from '../components/Navbar';\nimport ResultPage from './ResultPage';\nimport EditPage from './EditPage';\nimport VideoUploadToCloud from '../components/VideoUploadToCloud';\n\nconst Dashboard = () => {\n    const [editVideoSrc, setEditVideoSrc] = useState('');\n    const [analysisVideo, setAnalysisVideo] = useState();\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const segmentVideoRef = useRef(null);\n    const [segmentVideos, setSegmentVideos] = useState([]);\n\n    const [threeDModelLink, setThreeDModelLink] = useState('');\n\n\n    const handleNext = () => {\n        setSelectedIndex(prevIndex => (prevIndex + 1) % 3);\n\n    };\n\n    const handleBack = () => {\n        setSelectedIndex(prevIndex => (prevIndex - 1 + 3) % 3);\n    };\n\n\n    return (\n        <div className='page_container'>\n            <Navbar />\n            <div className=''>\n                <Tabs forceRenderTabPanel={true} selectedIndex={selectedIndex} onSelect={index => setSelectedIndex(index)}>\n                    <TabList>\n                        <Tab>Add Video</Tab>\n                        <Tab>Edit Video</Tab>\n                        <Tab>Analysis Output</Tab>\n                    </TabList>\n\n                    <TabPanel>\n                        <div className='tab_section'>\n                            <h1>Add Video</h1>\n                        </div>\n                        <div className='tab_section'>\n\n                            <VideoUploadToCloud\n                                setEditVideoSrc={setEditVideoSrc}\n                                setSelectedIndex={setSelectedIndex}\n                                setSegmentVideos={setSegmentVideos}\n                            />\n                        </div>\n\n                        <div className='footer_btns' style={{ justifyContent: \"right\" }}>\n                            <button onClick={handleNext} >Proceed &raquo; </button>\n                        </div>\n                    </TabPanel>\n\n\n                    <TabPanel>\n                        <EditPage\n                            editVideoSrc={editVideoSrc}\n                            setAnalysisVideo={setAnalysisVideo}\n                            setSelectedIndex={setSelectedIndex}\n                            segmentVideoRef={segmentVideoRef}\n                            segmentVideos={segmentVideos}\n                            setSegmentVideos={setSegmentVideos}\n                            setThreeDModelLink={setThreeDModelLink}\n\n                        />\n                        <div className='footer_btns'>\n                            <button onClick={handleBack}> &laquo; Back </button>\n                            <button onClick={handleNext}>Proceed &raquo; </button>\n                        </div>\n\n\n\n                    </TabPanel>\n\n                    <TabPanel>\n                        <ResultPage\n                            analysisVideo={analysisVideo}\n                            setAnalysisVideo={setAnalysisVideo}\n                            segmentVideoRef={segmentVideoRef}\n                            setSegmentVideos={setSegmentVideos}\n                            editVideoSrc={editVideoSrc} \n                            threeDModelLink={threeDModelLink}/>\n                        <div className='footer_btns'>\n                            <button onClick={handleBack}> &laquo; Back </button>\n                        </div>\n                    </TabPanel>\n                </Tabs>\n\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard"],"names":["_ref","animationPlay","threeDModelLink","_useState","useState","_useState2","_slicedToArray","show3d","setShow3d","useEffect","_jsx","_Fragment","children","style","width","height","cloud","models","toString","shadow","ar","editVideoSrc","analysisVideo","segmentVideoRef","setSegmentVideos","setAnalysisVideo","annotationText","setAnnotationText","loginUser","useUserContext","_useAlertContext","useAlertContext","setAlertMessage","setShowAlert","setIsLoading","useLoaderContext","_useState3","_useState4","recording","setRecording","_useState5","_useState6","mediaStream","setMediaStream","_useState7","_useState8","recordedBlob","setRecordedBlob","recorderRef","React","_useState9","_useState10","fetchSegmentVideos","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","response","filteredSegments","analysisSegment","wrap","_context","prev","next","axios","get","concat","sent","data","videoSegments","filter","segment","mainVideoURL","find","segmentURL","t0","stop","_x","apply","arguments","_jsxs","className","ref","autoPlay","loop","muted","src","ThreeDModel","id","role","type","value","onChange","e","target","rows","cols","onClick","post","then","res","message","catch","err","disabled","controls","URL","createObjectURL","BsFillRecordCircleFill","color","navigator","mediaDevices","getUserMedia","audio","stream","recorder","RecordRTC","current","startRecording","error","stopRecording","getBlob","getTracks","forEach","track","formData","FormData","append","Blob","finally","text_annotation","map","text","index","window","confirm","delete","headers","handleDeleteTextAnnotation","AiOutlineDelete","audio_annotation","audioURL","annotationAudio","handleDeleteAudioAnnotation","setSelectedIndex","segmentVideos","setThreeDModelLink","loaded","setLoaded","ffmpegRef","useRef","FFmpeg","trimVideoRef","videoTrimmedUrl","setVideoTrimmedUrl","endTime","setEndTime","startTime","setStartTime","editedVideoEndTime","setEditedVideoEndTime","_useState11","_useState12","editedVideoStartTime","setEditedVideoStartTime","videoRef","_useState13","_useState14","videoDuration","setVideoDuration","load","baseURL","ffmpeg","on","_ref3","console","log","toBlobURL","t1","t2","t3","coreURL","wasmURL","call","convertToHHMMSS","val","secNum","parseInt","hours","Math","floor","minutes","seconds","handleTrim","_ref4","_callee2","startTimeInSeconds","endTimeInSeconds","durationInSeconds","url","_context2","fetchFile","writeFile","exec","readFile","buffer","_ref5","_callee3","_context3","EditSlider","styled","Slider","_ref6","theme","padding","backgroundColor","border","boxShadow","marginLeft","marginRight","palette","mode","opacity","undefined","onLoadedMetadata","duration","min","max","newStartTime","parseFloat","step","valueLabelDisplay","slots","thumb","props","other","_objectWithoutProperties","_excluded","SliderThumb","_objectSpread","getAriaLabel","event","values","newEndTime","BiCut","marginBottom","marks","size","fetch","blob","userEmail","a","document","createElement","href","download","click","BsDownload","videoItem","main_video_duration","start_time","end_time","handleDeleteSegment","setTimeout","handleRunModel","fetchVideos","setActiveTab","webcamRef","setRecorder","isRecording","setIsRecording","isCameraOpen","setIsCameraOpen","recordedVideoURL","setRecordedVideoURL","handleRecordedVideoUpload","AiFillCamera","Webcam","videoConstraints","aspectRatio","facingMode","screenshotFormat","video","captureStream","record","mimeType","bitsPerSecond","MdDelete","cloudinaryVideosData","VideoLink","handleUpload","videoUrl","setEditVideoSrc","selectedFile","setSelectedFile","videosUrls","setVideosUrls","fileInputRef","fileName","setFileName","activeTab","_x2","_x3","handleEditVideo","handleDeleteVideo","querySelector","accept","hidden","file","files","name","MdCloudUpload","AiFillFileImage","LiveRecording","StockVideos","selectedIndex","handleNext","prevIndex","handleBack","Navbar","Tabs","forceRenderTabPanel","onSelect","TabList","Tab","TabPanel","VideoUploadToCloud","justifyContent","EditPage","ResultPage"],"sourceRoot":""}